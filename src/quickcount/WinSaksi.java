/*
 Copyright 2014 - Mhd Sulhan (m.shulhan@gmail.com)
 */

package quickcount;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mhd Sulhan <m.shulhan@gmail.com>
 */
public class WinSaksi extends javax.swing.JFrame {

	private HashMap hm_tps_saksi;

	/**
	 * Creates new form WinSaksi
	 */
	public WinSaksi() {
		hm_tps_saksi = new HashMap ();
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbSaksi = new javax.swing.JComboBox();
        bPilih = new javax.swing.JButton();
        l_kodeSaksi = new javax.swing.JLabel();
        tfSaksi = new javax.swing.JTextField();
        l_kodeSaksiManual = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lTPS = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tTPS = new javax.swing.JTable();
        bPilihManual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pemilihan Saksi");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bPilih.setText("Pilih");
        bPilih.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bPilihMouseClicked(evt);
            }
        });

        l_kodeSaksi.setLabelFor(cbSaksi);
        l_kodeSaksi.setText("Kode Saksi :");

        tfSaksi.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        l_kodeSaksiManual.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        l_kodeSaksiManual.setLabelFor(tfSaksi);
        l_kodeSaksiManual.setText("Kode Saksi :");

        lTPS.setText("TPS :");

        tTPS.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tTPS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. TPS", "Alamat", "id", "kelurahan_id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tTPS.setColumnSelectionAllowed(true);
        tTPS.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tTPS);
        tTPS.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tTPS.getColumnModel().getColumnCount() > 0) {
            tTPS.getColumnModel().getColumn(0).setMaxWidth(120);
            tTPS.getColumnModel().getColumn(2).setMinWidth(0);
            tTPS.getColumnModel().getColumn(2).setPreferredWidth(0);
            tTPS.getColumnModel().getColumn(2).setMaxWidth(0);
            tTPS.getColumnModel().getColumn(3).setMinWidth(0);
            tTPS.getColumnModel().getColumn(3).setPreferredWidth(0);
            tTPS.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        bPilihManual.setText("Pilih");
        bPilihManual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bPilihManualMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lTPS, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l_kodeSaksiManual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfSaksi))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l_kodeSaksi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbSaksi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bPilih)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(bPilihManual)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_kodeSaksi)
                    .addComponent(cbSaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(bPilih)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_kodeSaksiManual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lTPS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bPilihManual)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
		QuickCount qc = QuickCount.getInstance();
		DatabaseManager dbm = DatabaseManager.getInstance();

		this.loadKodeSaksi (qc, dbm);

		this.loadTPS (qc, dbm);
    }//GEN-LAST:event_formWindowOpened

    private void bPilihManualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPilihManualMouseClicked
		QuickCount qc = QuickCount.getInstance();

		qc.kode_saksi	= (String) tfSaksi.getText();

		if (qc.kode_saksi.isEmpty()) {
			JOptionPane.showMessageDialog(this, "Silahkan isi kode saksi!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
			return;
		}

		int r = tTPS.getSelectedRow();

		if (r < 0) {
			return;
		}

		qc.tps_id		= new Integer ((String) tTPS.getValueAt(r, 2));
		qc.kelurahan_id	= new Integer ((String) tTPS.getValueAt(r, 3));

		qc.win_saksi.setVisible(false);

		if (qc.win_hasil == null) {
			qc.win_hasil = new WinHasilPemilu();
		}
		qc.win_hasil.setVisible(true);
    }//GEN-LAST:event_bPilihManualMouseClicked

    private void bPilihMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bPilihMouseClicked
		QuickCount qc = QuickCount.getInstance();

		qc.kode_saksi	= (String) cbSaksi.getSelectedItem();
		qc.tps_id		= (Integer) this.hm_tps_saksi.get (qc.kode_saksi);

		qc.win_saksi.setVisible(false);

		if (qc.win_hasil == null) {
			qc.win_hasil = new WinHasilPemilu();
		}
		qc.win_hasil.setVisible(true);
    }//GEN-LAST:event_bPilihMouseClicked

	private void loadKodeSaksi (QuickCount qc, DatabaseManager dbm)
	{
		dbm.prepare (
			 " select	id "
			+" ,		kode"
			+" ,		no_tps"
			+" ,		kelurahan_id"
			+" from		saksi "
			+" where	kelurahan_id = ?"
		);

		try {
			dbm._ps.setInt (1, qc.kelurahan_id);
			dbm.executePrepare();

			while (dbm._rs.next()) {
				String kode = dbm._rs.getString("kode");
				this.hm_tps_saksi.put (kode, dbm._rs.getInt ("id"));
				cbSaksi.addItem(kode);
			}

			dbm.close();
		} catch (SQLException ex) {
			Logger.getLogger(WinSaksi.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	private void loadTPS (QuickCount qc, DatabaseManager dbm)
	{
		dbm.prepare (
			 " select	id"
			+" ,		no "
			+" ,		nama "
			+" ,		alamat "
			+" ,		kelurahan_id"
			+" from		tps "
			+" where	kelurahan_id = ?"
		);

		try {
			dbm._ps.setInt (1, qc.kelurahan_id);
			dbm.executePrepare();

			DefaultTableModel dtm = (DefaultTableModel) tTPS.getModel();

			while (dbm._rs.next()) {
				Vector v = new Vector ();

				v.add (dbm._rs.getString ("no"));
				v.add (dbm._rs.getString ("alamat"));
				v.add (dbm._rs.getString ("id"));
				v.add (dbm._rs.getString ("kelurahan_id"));

				dtm.addRow (v);
			}

			dbm.close();
		} catch (SQLException ex) {
			Logger.getLogger(WinSaksi.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bPilih;
    private javax.swing.JButton bPilihManual;
    private javax.swing.JComboBox cbSaksi;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lTPS;
    private javax.swing.JLabel l_kodeSaksi;
    private javax.swing.JLabel l_kodeSaksiManual;
    private javax.swing.JTable tTPS;
    private javax.swing.JTextField tfSaksi;
    // End of variables declaration//GEN-END:variables
}
